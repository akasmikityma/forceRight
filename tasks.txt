1 simple routing 
2 have the mid level of the main task which is making and writing the problem track
3 do simple css 
4 auth 

// make the dashboard sorted 
// make the "adding new Sections possible" >>
// 


the tracks in the frontend and backend is now somewhat different >> 

fix that first >> 


{
    "msg": "these are your problem tracks >> ",
    "tracks": [
        {
            "id": 2,
            "problemLink": "https://codeforces.com/problemset/problem/123/B",
            "initialThoughts": "This problem looks interesting. but im certainly confused",
            "logic": "Used dynamic programming.",
            "logicGap": null,
            "implementationGap": null,
            "solution": "Optimized using memoization.",
            "status": "PENDING",
            "rating": "FIVE",
            "userId": 1,
            "createdAt": "2025-01-07T09:21:55.401Z",
            "updatedAt": "2025-01-07T09:21:55.401Z"
        },
        {
            "id": 3,
            "problemLink": "https://codeforces.com/problemset/problem/1436/B",
            "initialThoughts": "something about prime numbers ",
            "logic": "definitely use number theories",
            "logicGap": null,
            "implementationGap": null,
            "solution": "(Optimized using memoization.) just use intuition",
            "status": "PENDING",
            "rating": "FIVE",
            "userId": 1,
            "createdAt": "2025-01-07T09:36:22.176Z",
            "updatedAt": "2025-01-07T10:26:32.731Z"
        }
    ]
}

export const track = atom<TrackInterface>({
  key: "IndividualTrack",
  default: {
    id:0,
    logic: [], // Initialize as an empty array
    implementations: [], // Initialize as an empty array
  },
});


/// authentication >> 

for now lets create another screen for the login and signUp > 
later that can be just a pop up on the home page only and just clicking on the login must get the user signed in >> 

/// look back on whatever happend and [fix the after effect of login/signup] [done]
/// start with the integration of the problem track creation and updation >> [done]
/// lastly the analytics and the codeforces api exploration > > 
/// if not signed In user cant go to any other page except the home >> 
//  the schema must be updated so that the analytics become more refined >> 
      i) get the status done [for now all the tracks is by default pending ,[have a dropdown so that users can select the status themselves]]
      ii) time realtion with the problem fileds >> 
          * if i put time for each field then how the schema gets changed > ?? 
          ** when i put somewhat a global time on the trcak then how the schema going to look > > 

?? ive migrated the schema last night and now generated the client >> still it says tag doesnt exist >> [tag is newly added field to Problem]

TAGS -- later when i would intregate the codeforces api then if possible i would first make that " tag " to "tags[]" and then fetching the tags 
from the api i would put that to the tags array >> 
   

---------------------------------------------------11 th feb -----------------------------------------

current state ==> 
1) the rating Chart component is working without the backend call >> but i have to refresh the page to get the latest data >> 
2) if im updating the track --> 1 > there is only an alert [rather have a toast from toastify may be]
                                2 > user is still in the update page only even after the updation is done >> 
                                    [does redirecting helps in the user experience or not ?? ]
3) all the top components are hardCoded [put some Quick data asap];
4) problem link field is set unique [so even if the user dont put anything .. it can match to another track that has also nothing in the pr link]
  [fix that ]


// in the case when the user has a lot of tracks then to get the trck of its usage in quick time is impossible >> 
   [create another page to show the libraries >> create another model called libraries >> user can create library and put tracks
   a track can be in many library .. and a library would obviously have multiple tracks >> ]

// make the time in minutes >> seconds look bizarre >> 

/////////////////////////////////////// how do i write the library schema model /////////////////////////////////
should it be many to many , one to many 